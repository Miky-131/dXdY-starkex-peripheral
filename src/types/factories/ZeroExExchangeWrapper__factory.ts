/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ZeroExExchangeWrapper,
  ZeroExExchangeWrapperInterface,
} from "../ZeroExExchangeWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "outputToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOutputTokenAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "transformations",
        type: "bytes",
      },
    ],
    name: "transformERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061018d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635ae7dca014610030575b600080fd5b61004361003e36600461008d565b610059565b604051610050919061012e565b60405180910390f35b6000610066600286610137565b979650505050505050565b80356001600160a01b038116811461008857600080fd5b919050565b60008060008060008060a087890312156100a5578182fd5b6100ae87610071565b95506100bc60208801610071565b94506040870135935060608701359250608087013567ffffffffffffffff808211156100e6578384fd5b818901915089601f8301126100f9578384fd5b813581811115610107578485fd5b8a6020828501011115610118578485fd5b6020830194508093505050509295509295509295565b90815260200190565b60008261015257634e487b7160e01b81526012600452602481fd5b50049056fea2646970667358221220b52d5d69522f97dde7359bffe583ee2c71fab7d7de2f5e13a28c490e37874acb64736f6c63430008000033";

export class ZeroExExchangeWrapper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZeroExExchangeWrapper> {
    return super.deploy(overrides || {}) as Promise<ZeroExExchangeWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ZeroExExchangeWrapper {
    return super.attach(address) as ZeroExExchangeWrapper;
  }
  connect(signer: Signer): ZeroExExchangeWrapper__factory {
    return super.connect(signer) as ZeroExExchangeWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZeroExExchangeWrapperInterface {
    return new utils.Interface(_abi) as ZeroExExchangeWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZeroExExchangeWrapper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ZeroExExchangeWrapper;
  }
}
