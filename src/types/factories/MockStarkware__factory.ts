/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockStarkware, MockStarkwareInterface } from "../MockStarkware";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "usdcAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "starkKey",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "assetType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantizedAmount",
        type: "uint256",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ethKey",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "starkKey",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "assetType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantizedAmount",
        type: "uint256",
      },
    ],
    name: "registerAndDepositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161070338038061070383398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c610673610090600039600061023b01526106736000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639ed170841461003b578063d528058914610050575b600080fd5b61004e61004936600461046b565b610063565b005b61004e61005e366004610348565b610230565b80600061006f85610238565b6040516370a0823160e01b815290915081906000906001600160a01b038316906370a08231906100a39030906004016104b8565b60206040518083038186803b1580156100bb57600080fd5b505afa1580156100cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f39190610453565b905060006323b872dd60e01b333087604051602401610114939291906104cc565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050610152848261025d565b6040516370a0823160e01b81526000906001600160a01b038516906370a08231906101819030906004016104b8565b60206040518083038186803b15801561019957600080fd5b505afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610453565b9050828110156101fc5760405162461bcd60e51b81526004016101f3906105b5565b60405180910390fd5b61020686846105d7565b81146102245760405162461bcd60e51b81526004016101f390610553565b50505050505050505050565b505050505050565b507f000000000000000000000000000000000000000000000000000000000000000090565b61026682610342565b6102825760405162461bcd60e51b81526004016101f39061058a565b600080836001600160a01b03168360405161029d919061049c565b6000604051808303816000865af19150503d80600081146102da576040519150601f19603f3d011682016040523d82523d6000602084013e6102df565b606091505b50915091508181906103045760405162461bcd60e51b81526004016101f391906104f0565b5080511561033c5780806020019051810190610320919061042c565b61033c5760405162461bcd60e51b81526004016101f390610523565b50505050565b3b151590565b60008060008060008060c08789031215610360578182fd5b86356001600160a01b0381168114610376578283fd5b95506020878101359550604088013567ffffffffffffffff8082111561039a578485fd5b818a0191508a601f8301126103ad578485fd5b8135818111156103bf576103bf610627565b604051601f8201601f19168101850183811182821017156103e2576103e2610627565b60405281815283820185018d10156103f8578687fd5b81858501868301379081019093019490945250959894975094956060810135955060808101359460a0909101359350915050565b60006020828403121561043d578081fd5b8151801515811461044c578182fd5b9392505050565b600060208284031215610464578081fd5b5051919050565b60008060008060808587031215610480578384fd5b5050823594602084013594506040840135936060013592509050565b600082516104ae8184602087016105fb565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208252825180602084015261050f8160408501602087016105fb565b601f01601f19169190910160400192915050565b6020808252601690820152751513d2d15397d3d4115490551253d397d1905253115160521b604082015260600190565b6020808252601c908201527f494e434f52524543545f414d4f554e545f5452414e5346455252454400000000604082015260600190565b6020808252601190820152704241445f544f4b454e5f4144445245535360781b604082015260600190565b6020808252600890820152674f564552464c4f5760c01b604082015260600190565b600082198211156105f657634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156106165781810151838201526020016105fe565b8381111561033c5750506000910152565b634e487b7160e01b600052604160045260246000fdfea26469706673582212201d1bcdceb4bfe169dbe4b4b6666939be061a15887d5e71cea4997f8bb92bb4fc64736f6c63430008000033";

export class MockStarkware__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    usdcAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockStarkware> {
    return super.deploy(usdcAddress, overrides || {}) as Promise<MockStarkware>;
  }
  getDeployTransaction(
    usdcAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(usdcAddress, overrides || {});
  }
  attach(address: string): MockStarkware {
    return super.attach(address) as MockStarkware;
  }
  connect(signer: Signer): MockStarkware__factory {
    return super.connect(signer) as MockStarkware__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStarkwareInterface {
    return new utils.Interface(_abi) as MockStarkwareInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStarkware {
    return new Contract(address, _abi, signerOrProvider) as MockStarkware;
  }
}
